{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["colorArray","App","quotesArray","text","author","quote","setQuote","useState","setAuthor","randomIndex","setRandomIndex","acccentColor","setAccentColor","randomNumberGenerator","Math","floor","random","length","React","createElement","className","style","backgroundColor","color","id","href","encodeURI","concat","class","onClick","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0OAGA,MAAMA,EAAa,CACjB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WA2HaC,MAxHf,WAEE,MAAMC,EAAc,CAClB,CACEC,KAAM,0EACNC,OAAQ,iBAEV,CACED,KAAM,0CACNC,OAAQ,cAEV,CACED,KAAM,+CACNC,OAAQ,mBAEV,CACED,KAAM,uDACNC,OAAQ,8BAEV,CACED,KAAM,yCACNC,OAAQ,kBAEV,CACED,KAAM,mCACNC,OAAQ,WAEV,CACED,KAAM,yCACNC,OAAQ,iBAEV,CACED,KAAM,2BACNC,OAAQ,aAEV,CACED,KAAM,oDACNC,OAAQ,cAEV,CACED,KAAM,yCACNC,OAAQ,qBAEV,CACED,KAAM,mDACNC,OAAQ,UAEV,CACED,KAAM,iCACNC,OAAQ,kBAEV,CACED,KAAM,uCACNC,OAAQ,gBAEV,CACED,KAAM,qDACNC,OAAQ,eAEV,CACED,KAAM,qCACNC,OAAQ,cAEV,CACED,KAAM,oDACNC,OAAQ,sBAILC,EAAOC,GAAYC,mBACxB,4EAEKH,EAAQI,GAAaD,mBAAS,kBAC9BE,EAAaC,GAAkBH,mBAAS,IACxCI,EAAcC,GAAkBL,mBAAS,WAU1CM,EAAwBA,KAC5BH,EAAeI,KAAKC,MAAMD,KAAKE,SAAWd,EAAYe,UAIxD,OACEC,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UACEC,UAAU,aACVC,MAAO,CAAEC,gBAAiBX,EAAcY,MAAOZ,IAE/CO,IAAAC,cAAA,OAAKK,GAAG,aACNN,IAAAC,cAAA,KAAGK,GAAG,QAAO,IAAEnB,EAAM,KACrBa,IAAAC,cAAA,KAAGK,GAAG,UAAS,KAAGpB,GAClBc,IAAAC,cAAA,KACEM,KAAMC,UAAU,0CAADC,OAC6BtB,EAAK,OAAAsB,OAAMvB,IAEvDoB,GAAG,cACHH,MAAO,CAAEC,gBAAiBX,IAE1BO,IAAAC,cAAA,KAAGS,MAAM,0BAEXV,IAAAC,cAAA,UACEE,MAAO,CAAEC,gBAAiBX,GAC1Ba,GAAG,YACHK,QAASA,KAhCjBhB,IACAD,EAAeZ,EAAWS,IAC1BH,EAASJ,EAAYO,GAAaN,WAClCK,EAAUN,EAAYO,GAAaL,UA8B5B,oBCzHI0B,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH1B,IAAAC,cAACD,IAAM2B,WAAU,KACf3B,IAAAC,cAAClB,EAAG,QAOR6B,K","file":"static/js/main.c5369110.chunk.js","sourcesContent":["import \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\n// Colors array\nconst colorArray = [\n  \"#f44336\",\n  \"#e81e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n];\n\nfunction App() {\n  // Create the array of objects that include the quote and it's author\n  const quotesArray = [\n    {\n      text: \"Genius is one percent inspiration and ninety-nine percent perspiration.\",\n      author: \"Thomas Edison\",\n    },\n    {\n      text: \"You can observe a lot just by watching.\",\n      author: \"Yogi Berra\",\n    },\n    {\n      text: \"A house divided against itself cannot stand.\",\n      author: \"Abraham Lincoln\",\n    },\n    {\n      text: \"Difficulties increase the nearer we get to the goal.\",\n      author: \"Johann Wolfgang von Goethe\",\n    },\n    {\n      text: \"Fate is in your hands and no one elses\",\n      author: \"Byron Pulsifer\",\n    },\n    {\n      text: \"Be the chief but never the lord.\",\n      author: \"Lao Tzu\",\n    },\n    {\n      text: \"Nothing happens unless first we dream.\",\n      author: \"Carl Sandburg\",\n    },\n    {\n      text: \"Well begun is half done.\",\n      author: \"Aristotle\",\n    },\n    {\n      text: \"Life is a learning experience, only if you learn.\",\n      author: \"Yogi Berra\",\n    },\n    {\n      text: \"Self-complacency is fatal to progress.\",\n      author: \"Margaret Sangster\",\n    },\n    {\n      text: \"Peace comes from within. Do not seek it without.\",\n      author: \"Buddha\",\n    },\n    {\n      text: \"What you give is what you get.\",\n      author: \"Byron Pulsifer\",\n    },\n    {\n      text: \"We can only learn to love by loving.\",\n      author: \"Iris Murdoch\",\n    },\n    {\n      text: \"Life is change. Growth is optional. Choose wisely.\",\n      author: \"Karen Clark\",\n    },\n    {\n      text: \"You'll see it when you believe it.\",\n      author: \"Wayne Dyer\",\n    },\n    {\n      text: \"Today is the tomorrow we worried about yesterday.\",\n      author: \"Vangelis Sigalas\",\n    },\n  ];\n  // All setStates declarations go here\n  const [quote, setQuote] = useState(\n    \"Genius is one percent inspiration and ninety-nine percent perspiration.\"\n  );\n  const [author, setAuthor] = useState(\"Thomas Edison\");\n  const [randomIndex, setRandomIndex] = useState(0);\n  const [acccentColor, setAccentColor] = useState(\"#282c34\");\n\n  // All arrow functions go here\n  const changeQuoteAndAuthor = () => {\n    randomNumberGenerator();\n    setAccentColor(colorArray[randomIndex]);\n    setQuote(quotesArray[randomIndex].text);\n    setAuthor(quotesArray[randomIndex].author);\n  };\n\n  const randomNumberGenerator = () => {\n    setRandomIndex(Math.floor(Math.random() * quotesArray.length));\n  };\n\n  // return of the App\n  return (\n    <div className=\"App\">\n      <header\n        className=\"App-header\"\n        style={{ backgroundColor: acccentColor, color: acccentColor }}\n      >\n        <div id=\"quote-box\">\n          <p id=\"text\">\"{quote}\"</p>\n          <p id=\"author\">- {author}</p>\n          <a\n            href={encodeURI(\n              `https://twitter.com/intent/tweet?text=\"${quote}\" -${author}`\n            )}\n            id=\"tweet-quote\"\n            style={{ backgroundColor: acccentColor }}\n          >\n            <i class=\"fa-brands fa-twitter\"></i>\n          </a>\n          <button\n            style={{ backgroundColor: acccentColor }}\n            id=\"new-quote\"\n            onClick={() => changeQuoteAndAuthor()}\n          >\n            Change Quote\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}